#!/bin/bash
trap ctrl_c INT

SCRIPT=$(readlink -f "$0")
SCRIPTPATH=$(dirname "$SCRIPT")
. ${SCRIPTPATH}/lib

ssh_key=$(cat ${SCRIPTPATH}/id_rsa.pub)

if [[ $# -eq 0 ]]; then
	help_message_reinstall
	exit 1
fi

while [[ $# -gt 0 ]]; do
	key="$1"
	case $key in
		-n)
			vm_name="$2"
			shift
			shift
			;;
		-i)
			new_image="$2"
			shift
			shift
			;;
		*)
			echo "Unknown argument: $key"
			exit 1
			;;
	esac
done

if [[ -z ${vm_name} ]]; then echo "Name not set"; exit 1; fi
if [[ ! -f ${SCRIPTPATH}/configs/${vm_name}.txt ]]; then echo "VM config not found"; exit 1; fi
if [[ ! -z ${new_image} ]]; then
	sed -i '/installed_image=.*/d' ${SCRIPTPATH}/configs/${vm_name}.txt
	echo "installed_image=${new_image}" >> ${SCRIPTPATH}/configs/${vm_name}.txt
fi

vm_disk=$(virsh domblklist ${vm_name} | grep -E "sda" | awk '{print $2}')
source ${SCRIPTPATH}/configs/${vm_name}.txt

if [[ -z ${vm_disk} ]]; then echo "VM disk not found"; exit 1; fi
if [[ -z ${installed_image} ]]; then echo "Installed image not set"; exit 1; fi

virsh destroy "${vm_name}" >/dev/null 2>&1
apply_image "${installed_image}" "${vm_disk}"
sudo virt-customize -q --hostname ${vm_name} -a "${vm_disk}"

if [[ $? -eq 0 ]]; then
	echo "install successful, starting vm ${vm_name}"
	virsh reset "${vm_name}" >/dev/null 2>&1 || virsh start ${vm_name} >/dev/null 2>&1
	wait_online "${vm_name}"
	write_ssh_key "${vm_name}" "${ssh_key}"
	write_config "${vm_name}"
else
	echo "error"
fi
