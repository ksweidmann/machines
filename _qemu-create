#!/bin/bash
trap ctrl_c INT
SCRIPT=$(readlink -f "$0")
SCRIPTPATH=$(dirname "$SCRIPT")
. ${SCRIPTPATH}/lib

ssh_key=$(cat ${SCRIPTPATH}/id_rsa.pub)
volume_group="vg00"
vm_memory="1024"
disk_size="5G"
vm_cpu_count="1"

if [[ $# -eq 0 ]]; then
	help_message_create
	exit 1
fi

while [[ $# -gt 0 ]]; do
	key="$1"
	case $key in
		-m)
			vm_memory="$2"
			shift
			shift
			;;
		-n)
			vm_name="$2"
			shift
			shift
			;;
		-s)
			disk_size="$2"
			shift
			shift
			;;
		-i)
			source_image="$2"
			shift
			shift
			;;
		-c)
			vm_cpu_count="$2"
			shift
			shift
			;;
		-v)
			volume_group="$2"
			shift
			shift
			;;
		*)
			echo "Unknown argument: $key"
			help_message_create
			exit 1
			;;
	esac
done

create_check_input "${vm_name}" "${source_image}" 

sudo lvcreate -q --yes -W y --type thin -V ${disk_size} --name ${vm_name}.fs --thin-pool thin ${volume_group}
#sudo lvcreate -q --yes -W y -n ${vm_name}.fs -L${disk_size} ${volume_group}
apply_image "${source_image}" "/dev/${volume_group}/${vm_name}.fs"
sudo virt-customize -q --hostname ${vm_name} -a "/dev/${volume_group}/${vm_name}.fs"
virt-install -n ${vm_name} \
	--memory 1024 \
	--vcpus ${vm_cpu_count},maxvcpus=$(nproc) \
	--cpu host \
	--import \
	--network bridge=br1,model=virtio-net-pci \
	--disk /dev/${volume_group}/${vm_name}.fs,cache=none,bus=scsi,discard=unmap,detect_zeroes=unmap \
	--graphics vnc,listen=0.0.0.0,keymap=en_us \
	--noautoconsole \
	-v \
	--virt-type kvm \
	--console pty,target_type=virtio \
	--serial pty \
	--rng /dev/urandom \
	--video virtio \
	--accelerate \
	--iothreads 4 \
	--os-variant none \
	--controller type=scsi,model=virtio-scsi  \
	--channel unix,mode=bind,path=/var/lib/libvirt/qemu/${vm_name}.agent,target_type=virtio,name=org.qemu.guest_agent.0

wait_online "${vm_name}"
write_ssh_key "${vm_name}" "${ssh_key}"
write_config "${vm_name}"
